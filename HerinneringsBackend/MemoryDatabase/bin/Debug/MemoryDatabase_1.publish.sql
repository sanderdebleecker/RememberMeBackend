/*
Deployment script for MemoryDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MemoryDatabase"
:setvar DefaultFilePrefix "MemoryDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.DATAMANAGEMENT\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.DATAMANAGEMENT\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[albums]...';


GO
CREATE TABLE [dbo].[albums] (
    [AlbumUuid]         VARCHAR (36)  NOT NULL,
    [AlbumName]         VARCHAR (100) NOT NULL,
    [AlbumThumbnail]    VARCHAR (36)  NULL,
    [AlbumCreator]      VARCHAR (36)  NOT NULL,
    [AlbumTarget]       VARCHAR (36)  NULL,
    [AlbumLastModified] BIGINT        NULL,
    PRIMARY KEY NONCLUSTERED ([AlbumUuid] ASC)
);


GO
PRINT N'Creating [dbo].[albumsmemories]...';


GO
CREATE TABLE [dbo].[albumsmemories] (
    [AMAlbum]  VARCHAR (36) NOT NULL,
    [AMMemory] VARCHAR (36) NOT NULL,
    CONSTRAINT [PK_albumsmemories] PRIMARY KEY NONCLUSTERED ([AMAlbum] ASC, [AMMemory] ASC)
);


GO
PRINT N'Creating [dbo].[memories]...';


GO
CREATE TABLE [dbo].[memories] (
    [MemoryUuid]         VARCHAR (36)  NOT NULL,
    [MemoryName]         VARCHAR (100) NOT NULL,
    [MemoryDescription]  VARCHAR (600) NULL,
    [MemoryDate]         VARCHAR (10)  NULL,
    [MemoryRating]       INT           NULL,
    [MemoryLocationLat]  FLOAT (53)    NULL,
    [MemoryLocationLong] FLOAT (53)    NULL,
    [MemoryLocationName] VARCHAR (100) NULL,
    [MemoryPath]         VARCHAR (500) NULL,
    [MemoryType]         VARCHAR (50)  NULL,
    [MemoryCreator]      VARCHAR (36)  NOT NULL,
    [MemoryTarget]       VARCHAR (36)  NULL,
    [MemoryLastModified] BIGINT        NULL,
    PRIMARY KEY NONCLUSTERED ([MemoryUuid] ASC)
);


GO
PRINT N'Creating [dbo].[sessions]...';


GO
CREATE TABLE [dbo].[sessions] (
    [SessionUuid]         VARCHAR (36)  NOT NULL,
    [SessionName]         VARCHAR (100) NULL,
    [SessionDate]         VARCHAR (10)  NULL,
    [SessionNotes]        VARCHAR (500) NULL,
    [SessionDuration]     INT           NULL,
    [SessionCount]        INT           NULL,
    [SessionIsFinished]   BIT           NULL,
    [SessionCreator]      VARCHAR (36)  NULL,
    [SessionTarget]       VARCHAR (36)  NULL,
    [SessionLastModified] BIGINT        NULL,
    PRIMARY KEY NONCLUSTERED ([SessionUuid] ASC)
);


GO
PRINT N'Creating [dbo].[sessionsalbums]...';


GO
CREATE TABLE [dbo].[sessionsalbums] (
    [SASession] VARCHAR (36) NOT NULL,
    [SAAlbum]   VARCHAR (36) NOT NULL,
    CONSTRAINT [PK_sessionsalbums] PRIMARY KEY NONCLUSTERED ([SASession] ASC, [SAAlbum] ASC)
);


GO
PRINT N'Creating [dbo].[timelines]...';


GO
CREATE TABLE [dbo].[timelines] (
    [TimelineUuid]         VARCHAR (36) NOT NULL,
    [TimelineMemory]       VARCHAR (36) NOT NULL,
    [TimelineUser]         VARCHAR (36) NOT NULL,
    [TimelineLastModified] BIGINT       NULL,
    PRIMARY KEY NONCLUSTERED ([TimelineUuid] ASC)
);


GO
PRINT N'Creating [dbo].[trustees]...';


GO
CREATE TABLE [dbo].[trustees] (
    [TrusteeSource]      VARCHAR (36) NOT NULL,
    [TrusteeDestination] VARCHAR (36) NOT NULL,
    [TrusteeConfirmed]   BIT          NULL,
    CONSTRAINT [PK_trustees] PRIMARY KEY NONCLUSTERED ([TrusteeSource] ASC, [TrusteeDestination] ASC)
);


GO
PRINT N'Creating [dbo].[users]...';


GO
CREATE TABLE [dbo].[users] (
    [UserUuid]      VARCHAR (36)  NOT NULL,
    [UserFirstName] VARCHAR (100) NULL,
    [UserLastName]  VARCHAR (100) NULL,
    [UserName]      VARCHAR (100) NULL,
    [UserPassword]  VARCHAR (32)  NULL,
    [UserQuestion1] VARCHAR (100) NULL,
    [UserQuestion2] VARCHAR (100) NULL,
    [UserAnswer1]   VARCHAR (50)  NULL,
    [UserAnswer2]   VARCHAR (50)  NULL,
    PRIMARY KEY NONCLUSTERED ([UserUuid] ASC)
);


GO
PRINT N'Creating [dbo].[FK_album_creator]...';


GO
ALTER TABLE [dbo].[albums]
    ADD CONSTRAINT [FK_album_creator] FOREIGN KEY ([AlbumCreator]) REFERENCES [dbo].[users] ([UserUuid]);


GO
PRINT N'Creating [dbo].[FK_album_memories]...';


GO
ALTER TABLE [dbo].[albumsmemories]
    ADD CONSTRAINT [FK_album_memories] FOREIGN KEY ([AMAlbum]) REFERENCES [dbo].[albums] ([AlbumUuid]);


GO
PRINT N'Creating [dbo].[FK_memory_albums]...';


GO
ALTER TABLE [dbo].[albumsmemories]
    ADD CONSTRAINT [FK_memory_albums] FOREIGN KEY ([AMMemory]) REFERENCES [dbo].[memories] ([MemoryUuid]);


GO
PRINT N'Creating [dbo].[FK_memory_creator]...';


GO
ALTER TABLE [dbo].[memories]
    ADD CONSTRAINT [FK_memory_creator] FOREIGN KEY ([MemoryCreator]) REFERENCES [dbo].[users] ([UserUuid]);


GO
PRINT N'Creating [dbo].[FK_session_creator]...';


GO
ALTER TABLE [dbo].[sessions]
    ADD CONSTRAINT [FK_session_creator] FOREIGN KEY ([SessionCreator]) REFERENCES [dbo].[users] ([UserUuid]);


GO
PRINT N'Creating [dbo].[FK_session_albums]...';


GO
ALTER TABLE [dbo].[sessionsalbums]
    ADD CONSTRAINT [FK_session_albums] FOREIGN KEY ([SASession]) REFERENCES [dbo].[sessions] ([SessionUuid]);


GO
PRINT N'Creating [dbo].[FK_album_sessions]...';


GO
ALTER TABLE [dbo].[sessionsalbums]
    ADD CONSTRAINT [FK_album_sessions] FOREIGN KEY ([SAAlbum]) REFERENCES [dbo].[albums] ([AlbumUuid]);


GO
PRINT N'Creating [dbo].[FK_timeline_memories]...';


GO
ALTER TABLE [dbo].[timelines]
    ADD CONSTRAINT [FK_timeline_memories] FOREIGN KEY ([TimelineMemory]) REFERENCES [dbo].[memories] ([MemoryUuid]);


GO
PRINT N'Creating [dbo].[FK_timeline_users]...';


GO
ALTER TABLE [dbo].[timelines]
    ADD CONSTRAINT [FK_timeline_users] FOREIGN KEY ([TimelineUser]) REFERENCES [dbo].[users] ([UserUuid]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
